use testdb;

-- Task 6
-- select city, count(name) as count_peoples
-- from users
-- group by city;

-- Task 7
-- ALTER TABLE users
-- ADD Salary int;

-- Task 7
-- UPDATE users
-- SET Salary = 1000
-- where id = 1;
-- update users
-- set Salary = 1100
-- where id = 2;
-- update users
-- set Salary = 1200
-- where id = 3;
-- update users
-- set Salary = 1400
-- where id = 4;
-- update users
-- set Salary = 1500
-- where id = 5;
-- update users
-- set Salary = 1600
-- where id = 6;
-- update users
-- set Salary = 1700
-- where id = 7;
-- update users
-- set Salary = 1800
-- where id = 8;
-- update users
-- set Salary = 1900
-- where id =9;
-- update users
-- set Salary = 2000
-- where id = 10;
-- update users
-- set Salary = 2100
-- where id = 11;
-- update users
-- set Salary = 2200
-- where id = 12;
-- update users
-- set Salary = 2300
-- where id = 13;
-- update users
-- set Salary = 2400
-- where id = 14;
-- update users
-- set Salary = 2500
-- where id = 15;
-- update users
-- set Salary = 2600
-- where id = 16;
-- update users
-- set Salary = 2700
-- where id = 17;
-- update users
-- set Salary = 2800
-- where id = 18;
-- update users
-- set Salary = 2900
-- where id = 19;
-- update users
-- set Salary = 3000
-- where id = 20;
-- update users
-- set Salary = 2900
-- where id = 21;
-- update users
-- set Salary = 2800
-- where id = 22;
-- update users
-- set Salary = 2700
-- where id = 23;
-- update users
-- set Salary = 2600
-- where id = 24;
-- update users
-- set Salary = 2500
-- where id = 25;
-- update users
-- set Salary = 2400
-- where id = 26;
-- update users
-- set Salary = 2300
-- where id = 27;
-- update users
-- set Salary = 2100
-- where id = 28;
-- update users
-- set Salary = 2000
-- where id = 29;
-- update users
-- set Salary = 1900
-- where id = 30;

-- Task 8 
-- select city, name, salary
-- from users
-- order by salary desc
-- limit 1
-- ;

-- Task 9
-- select city, avg(age) as avg_age, max(age) as max_age, min(age) as min_age
-- from users
-- group by city;

-- Task 10
-- select name, salary, work_position
-- from users
-- where city = 'Lviv' and salary >= 3000 and work_position ='Software Engineer';

-- Task 11
-- select city, avg(salary) as avg_salary
-- from users
-- where work_position = 'Marketing Manager' and gender = 'Female'
-- group by city;

-- Task 12
-- select avg(age) as avg_age
-- from users
-- where email not like'%gmail%'
-- group by email
-- ;

-- Task 13
-- select max(age)
-- from users
-- where city = 'Dnipro' and gender = 'Male' and email like '%ukr.net';
